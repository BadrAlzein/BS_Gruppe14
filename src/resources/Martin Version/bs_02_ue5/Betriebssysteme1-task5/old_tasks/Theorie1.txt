CGA SCREEN
Grafikkarte hat VRAM (eigener Speicherbereich)
Textmodus => ASCII-Code + Darstellungsattribute
Bildschirmposition = 2 Bytes (1. Byte für ASCII-Code (gerade Offsetadresse),
	2. Byte für Vorder- und Hintergrundfarbe (ungerade Offsetadresse))
Zeilen und Spalten geordnet für Eintraege im VRAM
80 x 25 Zeichen
1 Char = 2 Bytes 
Die Bytes werden ab der ersten Zeile Char 1 mit (0,1) hochgezaehlt bis Zeile 80
der 25 Char dann (3998,3999) da wir mit 0 begonnen haben.
80 Spalten x 25 Zeilen = 2000 Chars * 2 Bytes = 4000
Offset 0 (ASCII-Code für Char 0) im VRAM wird mit 0xb8000 adressiert 
Textausgabe = ASCII-Code + Vordergrundfarbe + Hintergrundfarbe + Blinken
1 ASCII-Code => 1 Byte für V/H Farbe und Blinken (Bits 0-3 VFarbe, 4-6 HFarbe, 
7 Blinken)

[Farben für CGA Textmodus]
0 Schwarz, 1 Blau, 2 Gruen, 3 Cyan, 4 Rot, 5 Magenta, 6 Braun, 7 Hellgrau, 
8 Dunkelgrau, 9 Hellblau, 10 Hellgruen, 11 Hellcyan, 12 Hellrot, 13 Hellmagenta
14 Gelb, 15 Weiß

Hintergrundfarbe kann 0 - 7 Farben
Vordergrundfarbe kann 0 - 15 Farben

[Cursor]
Videocontroller der Grafikkarte programmieren
Datenregister, Indexregister, Steuerregister 14 und 15

[Steuerregister]
Inhalt abfragen = Indexregister Index des Steuerregisters ausgeben 
	+ vom Datenregister aufs Steuerregister zugreifen
(Index = 14, Register = Cursor (high), Bedeutung = Offset der Cursorposition im VRAM)
(Index = 15, Regsiter = Cursor (low), Bedeutung = Offset der Cursorposition im VRAM)

[Daten-/ Indexregister]
in , out Befehle (eigenstaendige Portadressen)
(Port = 3d4, Register = Indexregister, Zugriffsart = nur schreiben)
(Port = 3d5, Register = Datenregister, Zugriffsart = lesen und schreiben)

Was ist ein CGA-Bildschirm? (Color Graphics Adapter)
- erster Farbgrafikkarten Standard
- farbige Ausgabe auf dem Bildschirm ueber direkte VRAM Adressansprache der Grafikkarte

Wie viele Zeichen passen auf einen CGA-Bildschirm und in welcher Anordnung (Zeilen und Spalten)?
- Textmodi = (80 Spalten x 25 Zeilen) Zeichen = 2000 Zeichen
- 2000 Zeichen * 2 Bytes = 4000 Bytes
- Bytes werden von links nach rechts gezaehlt Char 1 (0,1), Char 2 (1,2) ...

Wie viel Platz (in Byte) benoetigt ein Zeichen auf dem CGA-Bildschirm (inklusive aller Attribute)?
- 1 Char = 2 Byte

Wie kann man den CGA-Bildschirm ansprechen?
- Offset 0 (ASCII-Code für Char 0) im VRAM wird mit hexadezimal 0xb8000 (Dezimal 753664) adressiert 
- Textausgabe = ASCII-Code + Vordergrundfarbe + Hintergrundfarbe + Blinken
- 1 ASCII-Code => 1 Byte für V/H Farbe und Blinken (Bits 0-3 VFarbe, 4-6 HFarbe, 7 Blinken)

Wie sieht der Ablauf des Schreibens eines Zeichens skizzenhaft aus? (Textmodus)
- 1. angenommen wir haben den Buchstaben A
- 2. der ASCII-Code A ist dezimal 65 und hexadezimal 0x41
- 3. Darstellungsattribute waehlen (bspw. VFarbe = Weiß, HFarbe = Schwarz, Blinken = Nein)
4 Bits = 8+4+2+1 = 15 also von 0 bis 15, 3 Bits = 4+2+1 = 7 also von 0 bis 7 
- 4. VFarbe = 1111, HFarbe = 000, Blinken = 0, also Darstellungsattribute 00001111
- 5. adressiere hexadezimal 0xb8000 oder dezimal 753664 fuer Char 0
- 6. setze den dezimalen Wert 65 (oder binaer 1000001 fuer A) an diese Adresse (hexa 0xb8000 oder dezimal 753664) 
- 7. gehe an die Adresse 0xb8001 oder 753665 und setze die Darstellungsattribute 11110000 oder dezimal 240
Nun sind 2 Bytes an richtiger Stelle (fuer ein Char) gesetzt und werden durch den CGA Textmodus an Spalte 0, Zeile 0 als weißes Zeichen A mit schwarzen Hintergrund und keinem Blinken ausgegeben.

Wie sieht der Ablauf des Setzens des Cursors skizzenhaft aus?
- 1. ueber Indexregister (Port 3d4) mit in und out Befehl: Index des Steuerregisters ausgeben bspw. Index = 14
- 2. Port 3d5 fuer Datenregister mit in und out Befehl: auf ueber Index adressiertes Steuerregister zugreifen

Was ist eine Initialisierungsliste in C++?
- in Konstruktoren
- Konstruktion von Vorfahren-Klassen, eingebetteten Elementen und Referenzen regeln
- einzelne Deklaration geht nicht ohne Initialisierung
- in Faellen wo eine sofortige Initialisierung nötig ist 
- Beispiele: 
	nach const folgt immer Initialisierung
	Referenzen sind Zeiger, die nie null sein koennen (bestehende Referenz oder Objekt zuweisen)
	zur Konstruktion von Objekten Initialisierungswerte uebergeben bekommen muessen 
- Initialisierung zum Konstruktionszeitpunkt (=> Konstruktor muss vorhanden sein)
- vor Beginn des Konstruktors werden Initialisierungen in Form einer Liste vorgenommen








